@using DJValeting.Domain.Data.Enum;
@model DJValeting.Models.BookingViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>BookingViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" action="@Url.Action("Edit", "Booking")" novalidate>
            <div class="form-group">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Name)
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.BookingDate, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(x => x.BookingDate)
            </div>
            <div class="form-group">
                @Html.DropDownList("Flexibility",
                    Html.GetEnumSelectList<FlexibilityEnum>(),
                    "Your Availability", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Flexibility)
            </div>
            <div class="form-group">
                @Html.DropDownList("VehicleSize",
                    Html.GetEnumSelectList<CarSizeEnum>(),
                    "Vehicle Size", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.VehicleSize)
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ContactNumber)
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmailAddress)
            </div>
            <button class="bttn bttn-primary bttn-submit ml-1" type="submit">
                Save
            </button>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
